name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        gcc_version: [12]
    
    env:
      FC: gfortran-${{ matrix.gcc_version }}
      CC: gcc-${{ matrix.gcc_version }}
      GCC_VERSION: ${{ matrix.gcc_version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install GFortran
      run: |
        sudo apt-get update
        sudo apt-get install -y gfortran-${GCC_VERSION} gcc-${GCC_VERSION} g++-${GCC_VERSION}
        sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_VERSION} 100
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100
        sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100
    
    - name: Install dependencies
      run: |
        sudo apt-get install -y cmake git gcovr
        # Install fpm binary distribution
        wget https://github.com/fortran-lang/fpm/releases/download/v0.12.0/fpm-0.12.0-linux-x86_64-gcc-12 -O fpm
        chmod +x fpm
        mkdir -p $HOME/.local/bin
        mv fpm $HOME/.local/bin/
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Build and test
      run: |
        export PATH=$HOME/.local/bin:$PATH
        fpm build --profile debug --compiler gfortran
        fpm test --compiler gfortran --flag "--coverage -g -O0"
    
    - name: Generate coverage report
      run: |
        # Find all gcda files
        find build -name "*.gcda" -o -name "*.gcno" | head -20
        
        # Generate coverage reports with gcovr
        gcovr --gcov-executable gcov-${GCC_VERSION} \
              --root . \
              --exclude '.*/test/.*' \
              --exclude '.*/build/dependencies/.*' \
              --xml coverage.xml \
              --html coverage.html \
              --html-details \
              --output coverage_html/index.html \
              --print-summary
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage_html/
        retention-days: 30